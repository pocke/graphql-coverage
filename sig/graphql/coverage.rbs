module GraphQL
  module Coverage
    type ignored_field = { owner: String, field: String }
                       | { "owner" => String, "field" => String }
    attr_accessor self.ignored_fields: Array[ignored_field]

    self.@schema: singleton(GraphQL::Schema)

    def self.enable: (singleton(GraphQL::Schema) schema) -> void

    def self.dump: (String | Pathname file_path) -> void

    def self.load: (*String | Pathname file_paths) -> void

    def self.report: (?output: IO) -> bool

    def self.result: () -> Array[Call]

    # @api private
    def self.reset!: () -> untyped

    # @api private
    def self.schema=: (untyped schema) -> untyped
  end
end
