module GraphQL
  module Coverage
    # @api private
    class Result
      @calls: Array[Call]
      @schema: singleton(GraphQL::Schema)
      @ignored_field_patterns: Array[ignored_field]
      @uncovered_fields: Array[Call]

      def initialize: (calls: Array[Call], schema: singleton(GraphQL::Schema), ignored_fields: Array[ignored_field]) -> void

      def covered_fields: () -> Array[Call]

      def uncovered_fields: () -> Array[Call]

      def ignored_fields: () -> Array[Call]

      def available_fields: () -> Array[Call]

      private

      def reject_ignored_fields: (Array[Call]) -> Array[Call]

      def match_pattern?: (String, String) -> bool
    end
  end
end
